* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

a {
    font-size: .3333rem;
    text-decoration: none;
    color: #fff;
}

body {
    /* 
    由于750px设计稿通过flexible.js计算分成10份，1份就是1rem。
    我们width给定了10rem，对应设计稿尺寸，页面元素也相较于750px的设计稿计算相对单位（rem），页面大小发生变化时，html font-size 会根据 js 计算划分10等分计算每份大小赋值给font-size，从而每份大小发生变化，页面元素rem大小不变，文档页面实现等比例缩放
    虽然是制作移动端页面，但考虑了兼容pc ipad端物理像素大的设备，必须适当的规定网页内容(body)的最大宽度，让我们网页内容(body)在物理像素大的设备居中显示
    这里我们750px的设计稿，
    此时max-width不能用10rem，因为flexible.js实时获取浏览器窗口大小，把宽度平均分成10份，
    此时max-width:10rem的话任会占满全屏，应用max-width: 750px
    */
    max-width: 750px;
    min-width: 320.0025px;
    width: 10rem;
    margin: 0 auto;
    font-family: Arial, Helvetica;
    line-height: 1.5;
    background: #F2F2F2;
    height: 2000.0025px;
}

/*
    虽然是制作移动端页面，但考虑了兼容pc ipad端物理像素大的设备:
  1. 必须适当的规定网页内容(body)的最大宽度，让我们网页内容(body)在物理像素大的设备居中显示
  2. 当可视窗口区域宽度大于750px，就按照不flexible.js 计算的每份大小设置给font-size，而是按照最大body宽度（设计稿尺寸），设置一个在750px以上的固定值
   - 以防出现可视窗口大于750px后，页面body固定是750px，但页面元素还在因为flexible.js计算而改变font-size，从而导致装不开塌陷问题
  */
@media screen and (min-width:750px) {
    html {
        font-size: 75px !important;
    }
}
/* 当屏幕超过750px 就设置 75px（750/10=75px） 为单位像素（1rem=75px）,
    否者会出现问题：
    .search-content是固定定位盒子，盒子必须给自适应的宽度（rem)，我们希望该盒子是占满body的，
    因为固定定位的盒子与父元素无关系无法给100%，所以我们给出10rem来撑满网内内容（body）宽度
*/
.search-content {
    position: fixed;
    top: 0;
    width: 10rem;
    display: flex;
    padding: 9.9975px;
    height: .84rem;
    align-items: center;
    background-color: #ffc001;
}

.classify {
    width: .4133rem;
    height: .64rem;
    background: url(../images/classify.png) no-repeat;
    background-size: .4133rem .64rem;
}

.search {
    flex: 1;
    padding: 0 .2rem;
}

.search input {
    margin-top: .0667rem;
    padding-left: 50.0025px;
    width: 100%;
    height: .6667rem;
    font-size: .3333rem;
    border-radius: .6667rem;
    -webkit-border-radius: .6667rem;
    -moz-border-radius: .6667rem;
    -ms-border-radius: .6667rem;
    -o-border-radius: .6667rem;
    border: 0;
    outline: none;
}

.foucs {
    padding-top: .84rem;
    width: 10rem;
}

.foucs img {
    vertical-align: middle;
    width: 100%;
}

.ad {
    display: flex;
    width: 10rem;
}

.ad a {
    flex: 1;
    height: 2.08rem;
}

.ad a img {
    width: 100%;
    height: 100%;
}


.nav-entry a {
    float: left;
    width: 2rem;
    color: black;
    font-size: .2667rem;
    height: 1.8667rem;
    text-align: center;
    border: 1px solid #eee;
}

.nav-entry a img {
    margin-top: 15px;
    width: .9333rem;
    height: .9333rem;
}

.nav-entry a span {
    display: block;
}